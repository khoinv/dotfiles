snippet sapcontroller
sap.ui.define([
    "sap/ui/demo/wt/controller/BaseController",
    "sap/ui/demo/wt/utils/common",
    ], function (Controller, Common) {
        "use strict";

        return Controller.extend("${1:sap.ui.demo.wt.controller.test}", {
            /**
            * Called when a controller is instantiated and its View controls (if available) are already created.
            * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.
            * @memberOf $1 **/
            onInit: function() {
            },

            /**
            * Similar to onAfterRendering, but this hook is invoked before the controller's View is re-rendered
            * (NOT before the first rendering! onInit() is used for that one!).
            * @memberOf $1
            **/
            onBeforeRendering: function() {
            },

            /**
            * Called when the View has been rendered (so its HTML is part of the document). Post-rendering manipulations of the HTML could be done here.
            * This hook is the same one that SAPUI5 controls get after being rendered.
            * @memberOf $1 **/
            onAfterRendering: function() {
            },

            /**
            * Called when the Controller is destroyed. Use this one to free resources and finalize activities.
            * @memberOf $1
            **/
            onExit: function() {
            }
        });
    });
endsnippet

snippet sapjsview
sap.ui.jsview('${1:sap.ui.demo.wt.view.test}', {

    /**
    * Specifies the Controller belonging to this View.
    * In the case that it is not implemented, or that "null" is returned, this View does not have a Controller.
    * @memberOf $1 **/
    getControllerName : function() {
        return '${2:sap.ui.demo.wt.controller.test}';
    },

    /**
    * Is initially called once after the Controller has been instantiated. It is the place where the UI is constructed.
    * Since the Controller is given to this method, its event handlers can be attached right away.
    * @memberOf $1 **/
    createContent : function(oController) {
    }
});
endsnippet
